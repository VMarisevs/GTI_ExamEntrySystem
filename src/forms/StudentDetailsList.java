/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StudentDetailsList.java
 *
 * Created on 28-Feb-2013, 15:09:53
 */

package forms;
import application.Person;
import application.Group;
import application.Conn;
import javax.swing.DefaultListModel;
import java.util.ArrayList;
import validation.*;

/**
 *
 * @author Evilguy
 */
public class StudentDetailsList extends javax.swing.JInternalFrame {
    private Conn newConnection = new Conn();
    DefaultListModel lstBox = new DefaultListModel();

    ArrayList<Group> groupList = new ArrayList<Group>();
    ArrayList<Person> studentList = new ArrayList<Person>();
    /** Creates new form StudentDetailsList */
    public StudentDetailsList() {
        initComponents();
    }


    private void eraseInfo(boolean cbBox,boolean listBox){
             //method that cleans boxes in this form
                txtID.setText("");
                txtPPS.setText("");
                txtName.setText("");
                txtSurname.setText("");
                txtAddress.setText("");
                txtCity.setText("");
                txtPhone.setText("");
                txtDOB.setText("");
                txtEmail.setText("");
                
                cbGender.setSelectedIndex(0);

                if (listBox){
                    lstBox.removeAllElements();
                }
               
                if (cbBox){
                    cbGroup.removeAllItems();
                }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtID = new javax.swing.JTextField();
        txtPPS = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtSurname = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtDOB = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        lblPPS = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        cbGender = new javax.swing.JComboBox();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPersons = new javax.swing.JList(lstBox);
        btnNew = new javax.swing.JButton();
        btnSaveNew = new javax.swing.JButton();
        cbGroup = new javax.swing.JComboBox();
        btnSelectGroup = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        txtID.setEnabled(false);
        getContentPane().add(txtID);
        txtID.setBounds(70, 100, 80, 20);

        txtPPS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPPSKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPPSKeyTyped(evt);
            }
        });
        getContentPane().add(txtPPS);
        txtPPS.setBounds(270, 100, 120, 20);

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });
        getContentPane().add(txtName);
        txtName.setBounds(70, 130, 120, 20);

        txtSurname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSurnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSurnameKeyTyped(evt);
            }
        });
        getContentPane().add(txtSurname);
        txtSurname.setBounds(270, 130, 120, 20);
        getContentPane().add(txtAddress);
        txtAddress.setBounds(70, 160, 320, 20);
        getContentPane().add(txtCity);
        txtCity.setBounds(70, 190, 120, 20);

        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneKeyTyped(evt);
            }
        });
        getContentPane().add(txtPhone);
        txtPhone.setBounds(270, 190, 120, 20);

        txtDOB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDOBKeyTyped(evt);
            }
        });
        getContentPane().add(txtDOB);
        txtDOB.setBounds(270, 220, 120, 20);
        getContentPane().add(txtEmail);
        txtEmail.setBounds(70, 250, 140, 20);

        lblID.setText("ID:");
        lblID.setMaximumSize(new java.awt.Dimension(30, 50));
        lblID.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblID);
        lblID.setBounds(10, 100, 60, 20);

        lblPPS.setText("PPS:");
        lblPPS.setMaximumSize(new java.awt.Dimension(30, 50));
        lblPPS.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblPPS);
        lblPPS.setBounds(210, 100, 60, 20);

        lblName.setText("Name:");
        lblName.setMaximumSize(new java.awt.Dimension(30, 50));
        lblName.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblName);
        lblName.setBounds(10, 130, 60, 20);

        lblSurname.setText("Surname:");
        lblSurname.setMaximumSize(new java.awt.Dimension(30, 50));
        lblSurname.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblSurname);
        lblSurname.setBounds(210, 130, 60, 20);

        lblAddress.setText("Address:");
        lblAddress.setMaximumSize(new java.awt.Dimension(30, 50));
        lblAddress.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblAddress);
        lblAddress.setBounds(10, 160, 60, 20);

        lblCity.setText("City:");
        lblCity.setMaximumSize(new java.awt.Dimension(30, 50));
        lblCity.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblCity);
        lblCity.setBounds(10, 190, 60, 20);

        lblPhone.setText("Phone:");
        lblPhone.setMaximumSize(new java.awt.Dimension(30, 50));
        lblPhone.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblPhone);
        lblPhone.setBounds(210, 190, 60, 20);

        lblDOB.setText("Date of birth:");
        lblDOB.setMaximumSize(new java.awt.Dimension(30, 50));
        lblDOB.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblDOB);
        lblDOB.setBounds(190, 220, 80, 20);

        lblGender.setText("Gender:");
        lblGender.setMaximumSize(new java.awt.Dimension(30, 50));
        lblGender.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblGender);
        lblGender.setBounds(10, 220, 60, 20);

        lblEmail.setText("Email:");
        lblEmail.setMaximumSize(new java.awt.Dimension(30, 50));
        lblEmail.setMinimumSize(new java.awt.Dimension(30, 50));
        getContentPane().add(lblEmail);
        lblEmail.setBounds(10, 250, 60, 20);

        cbGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        getContentPane().add(cbGender);
        cbGender.setBounds(70, 220, 80, 20);

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/floppy-icon.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave);
        btnSave.setBounds(110, 490, 100, 40);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/close-icon.png"))); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose);
        btnClose.setBounds(470, 0, 30, 30);

        lstPersons.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPersons.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPersonsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstPersons);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(220, 250, 270, 280);

        btnNew.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add-file-icon.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        getContentPane().add(btnNew);
        btnNew.setBounds(10, 490, 100, 40);

        btnSaveNew.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        btnSaveNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/floppy-icon.png"))); // NOI18N
        btnSaveNew.setText("Save New");
        btnSaveNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewActionPerformed(evt);
            }
        });
        getContentPane().add(btnSaveNew);
        btnSaveNew.setBounds(10, 490, 100, 40);

        cbGroup.setFont(new java.awt.Font("Tahoma", 0, 10));
        getContentPane().add(cbGroup);
        cbGroup.setBounds(10, 60, 380, 20);

        btnSelectGroup.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        btnSelectGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/hd-search-icon.png"))); // NOI18N
        btnSelectGroup.setText("Select");
        btnSelectGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectGroupActionPerformed(evt);
            }
        });
        getContentPane().add(btnSelectGroup);
        btnSelectGroup.setBounds(400, 50, 100, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // getting a list of all groups

        groupList = newConnection.getGroupList(STARTME.TESTING);
        for (int i=0; i < groupList.size(); i++){

         cbGroup.addItem(""+groupList.get(i).getCourseName()+" "+groupList.get(i).getYear());
        }
    }//GEN-LAST:event_formInternalFrameActivated

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // updating information about student
        if (!(txtPPS.getText().isEmpty()) &&
                         !(txtName.getText().isEmpty()) &&
                         !(txtSurname.getText().isEmpty()) &&
                         !(txtAddress.getText().isEmpty()) &&
                         !(txtCity.getText().isEmpty()) &&
                         !(txtDOB.getText().isEmpty()) &&
                         !(txtPhone.getText().isEmpty()) &&
                         !(txtEmail.getText().isEmpty())){

                studentList.get(lstPersons.getSelectedIndex()).setPPSNumber(txtPPS.getText());
                studentList.get(lstPersons.getSelectedIndex()).setFirstName(txtName.getText());
                studentList.get(lstPersons.getSelectedIndex()).setLastName(txtSurname.getText());
                studentList.get(lstPersons.getSelectedIndex()).setAddress(txtAddress.getText());
                studentList.get(lstPersons.getSelectedIndex()).setCity(txtCity.getText());
                studentList.get(lstPersons.getSelectedIndex()).setDateOfBirth(txtDOB.getText());
                studentList.get(lstPersons.getSelectedIndex()).setPhone(txtPhone.getText());
                studentList.get(lstPersons.getSelectedIndex()).setEmail(txtEmail.getText());
                if (cbGender.getSelectedIndex() == 0){
                studentList.get(lstPersons.getSelectedIndex()).setGender("true");
                } else {studentList.get(lstPersons.getSelectedIndex()).setGender("false");}


                newConnection.saveStudent(studentList.get(lstPersons.getSelectedIndex()), STARTME.TESTING);
                this.setVisible(false);
                eraseInfo(true,true);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        

                this.setVisible(false);
                eraseInfo(true,true);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void lstPersonsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPersonsValueChanged
        // updating boxes with selected student information
       if (!(lstPersons.isSelectionEmpty())){
                    
            txtID.setText(""+studentList.get(lstPersons.getSelectedIndex()).getbdId());
            txtPPS.setText(studentList.get(lstPersons.getSelectedIndex()).getPPSNumber());
            txtName.setText(studentList.get(lstPersons.getSelectedIndex()).getFirstName());
            txtSurname.setText(studentList.get(lstPersons.getSelectedIndex()).getLastName());
            txtAddress.setText(studentList.get(lstPersons.getSelectedIndex()).getAddress());
            txtCity.setText(studentList.get(lstPersons.getSelectedIndex()).getCity());
            txtDOB.setText(studentList.get(lstPersons.getSelectedIndex()).getDoB());
            txtPhone.setText(studentList.get(lstPersons.getSelectedIndex()).getPhone());
            txtEmail.setText(studentList.get(lstPersons.getSelectedIndex()).getEmail());

            
            if (studentList.get(lstPersons.getSelectedIndex()).getGender()){
                cbGender.setSelectedIndex(0);
            } else {
                cbGender.setSelectedIndex(1);
            }

         }

    }//GEN-LAST:event_lstPersonsValueChanged

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // disable several buttons and selections
        eraseInfo(false,false);
        btnSave.setEnabled(false);
        btnClose.setEnabled(false);
        lstPersons.setEnabled(false);
        btnSaveNew.setVisible(true);
        btnNew.setVisible(false);


    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewActionPerformed

        //add to object if all fields are not empty
         if (!(txtPPS.getText().isEmpty()) &&
                 !(txtName.getText().isEmpty()) &&
                 !(txtSurname.getText().isEmpty()) &&
                 !(txtAddress.getText().isEmpty()) &&
                 !(txtCity.getText().isEmpty()) &&
                 !(txtDOB.getText().isEmpty()) &&
                 !(txtPhone.getText().isEmpty()) &&
                 !(txtEmail.getText().isEmpty())){

             studentList.add(new Person());

             studentList.get(studentList.size()-1).setPPSNumber(txtPPS.getText());
             studentList.get(studentList.size()-1).setFirstName(txtName.getText());
             studentList.get(studentList.size()-1).setLastName(txtSurname.getText());
             studentList.get(studentList.size()-1).setAddress(txtAddress.getText());
             studentList.get(studentList.size()-1).setCity(txtCity.getText());
             studentList.get(studentList.size()-1).setDateOfBirth(txtDOB.getText());
             studentList.get(studentList.size()-1).setPhone(txtPhone.getText());
             studentList.get(studentList.size()-1).setEmail(txtEmail.getText());

             if (cbGender.getSelectedIndex() == 0){
             studentList.get(studentList.size()-1).setGender("true");} else
             {studentList.get(studentList.size()-1).setGender("false");}

             lstBox.addElement(studentList.get(studentList.size()-1).getFirstName() + " " + studentList.get(studentList.size()-1).getLastName());

             newConnection.insertNewStudent(studentList.get(studentList.size()-1), groupList.get(cbGroup.getSelectedIndex()), STARTME.TESTING);
         

       
        btnSave.setEnabled(true);
        btnClose.setEnabled(true);
        lstPersons.setEnabled(true);
        btnSaveNew.setVisible(false);
        btnNew.setVisible(true);

        }
    }//GEN-LAST:event_btnSaveNewActionPerformed

    private void btnSelectGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectGroupActionPerformed
        // getting students in selected group
        //groupList.get(cbGroup.getSelectedIndex()).getGroupID(); // retuns the id of selected group
        eraseInfo(false,true);

        studentList =  newConnection.getStudentsInGroup(groupList.get(cbGroup.getSelectedIndex()).getGroupID(), STARTME.TESTING);

        for (int i=0; i < studentList.size(); i++){

         lstBox.addElement(studentList.get(i).getFirstName() + " " + studentList.get(i).getLastName());
        }
    }//GEN-LAST:event_btnSelectGroupActionPerformed

    private void txtPPSKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPPSKeyReleased
        // autocorrection
         autocorrection.ppsCorrection(txtPPS);
    }//GEN-LAST:event_txtPPSKeyReleased

    private void txtPPSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPPSKeyTyped
        // validation
        datavalidation.ppsValidation(evt,txtPPS);
    }//GEN-LAST:event_txtPPSKeyTyped

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // autocorrection
        autocorrection.nameCorrection(txtName);
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtSurnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurnameKeyReleased
        // autocorrection
        autocorrection.nameCorrection(txtSurname);
    }//GEN-LAST:event_txtSurnameKeyReleased

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        // validation
        datavalidation.nameValidation(evt);
    }//GEN-LAST:event_txtNameKeyTyped

    private void txtSurnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurnameKeyTyped
        // validation
        datavalidation.nameValidation(evt);
    }//GEN-LAST:event_txtSurnameKeyTyped

    private void txtDOBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDOBKeyTyped
        // TODO add your handling code here:
        datavalidation.dateStandardValidation(evt, txtDOB);
    }//GEN-LAST:event_txtDOBKeyTyped

    private void txtPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyTyped
        // TODO add your handling code here:
        datavalidation.phoneValidation(evt, txtPhone);
    }//GEN-LAST:event_txtPhoneKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveNew;
    private javax.swing.JButton btnSelectGroup;
    private javax.swing.JComboBox cbGender;
    private javax.swing.JComboBox cbGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPPS;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JList lstPersons;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPPS;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSurname;
    // End of variables declaration//GEN-END:variables

}
